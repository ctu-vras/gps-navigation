#!/usr/bin/env python

import rospy
import serial

from gps_to_path.msg import LlhFix


class LlhPublisher():
    def __init__(self, GPS):
        self.GPS = GPS
        self.pub_llh = rospy.Publisher('llh', LlhFix, queue_size=10)
        self.llh_msg = LlhFix()
        self.llh_string = ""

    def set_llh_msg(self, llh_sentence):
        self.llh_msg.header.stamp = rospy.Time.now()
        self.llh_msg.header.frame_id = "gps"
        self.llh_msg.data = llh_sentence

    def run(self):
        rate = rospy.Rate(50)
        while not rospy.is_shutdown():
            try:
                llh_sentence = self.GPS.readline().strip()
            except Exception as e:
                rospy.logerr(e)
                continue

            if llh_sentence:
                llh_sentence = llh_sentence.decode('ascii')
                self.set_llh_msg(llh_sentence)
                self.pub_llh.publish(self.llh_msg)

                llh_sentence = ""
            else:
                rate.sleep()


def main():
    rospy.init_node('llh_publisher')

    GPS = None

    rate = rospy.Rate(10)

    while not GPS and not rospy.is_shutdown():
        try:
            serial_port = rospy.get_param('~port', '/dev/ttyACM0')
            serial_baud = rospy.get_param('~baud', 115200)
            GPS = serial.Serial(
                port=serial_port, baudrate=serial_baud, timeout=2)
        except:
            rospy.logwarn_throttle(5.0, "Serial port {} with baudrate {} cannot be opened.".format(
                serial_port, serial_baud))
        rate.sleep()

    node = LlhPublisher(GPS)

    node.run()


if __name__ == '__main__':
    main()
