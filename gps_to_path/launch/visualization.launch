<launch>      
    <arg name="path_planner_node_name" default="/path_planner_igraph" />
    <arg name="utm_z_offset" default="0.0" />
    <arg name="utm_zone" default="" />
    <arg name="osm_vis" default="false" />
    <arg name="gpx_file" default="" />
    <arg name="replay" default="false" />

    <node name="autonomy_override_vis" pkg="gps_to_path" type="autonomy_override_vis" unless="$(arg replay)" />

    <node name="fix_to_utm" pkg="gps_to_path" type="fix_to_utm" unless="$(arg replay)">
        <param name="publish_pose" value="true" />
        <param name="publish_odom" value="true" />
        <param name="publish_path" value="true" />
        <param name="path_min_distance" value="0.25" />
        <param name="path_frame_id" value="utm_local" />
        <param name="z_offset" value="$(arg utm_z_offset)" />
        <param name="utm_zone" value="$(arg utm_zone)" if="$(eval utm_zone != '')" />
        <param name="path_max_size" value="50000" />
        <remap from="~fix" to="fix" />
    </node>

    <node name="fix_filtered_to_utm" pkg="gps_to_path" type="fix_to_utm" unless="$(arg replay)">
        <param name="publish_pose" value="true" />
        <param name="publish_odom" value="true" />
        <param name="publish_path" value="true" />
        <param name="path_min_distance" value="0.25" />
        <param name="path_frame_id" value="utm_local" />
        <param name="z_offset" value="$(arg utm_z_offset)" />
        <param name="utm_zone" value="$(arg utm_zone)" if="$(eval utm_zone != '')" />
        <param name="path_max_size" value="50000" />
        <remap from="~fix" to="gps/fix_filtered" />
    </node>

    <node name="fix_smoothed_to_utm" pkg="gps_to_path" type="fix_to_utm" unless="$(arg replay)">
        <param name="publish_pose" value="true" />
        <param name="publish_odom" value="true" />
        <param name="publish_path" value="true" />
        <param name="path_min_distance" value="0.25" />
        <param name="path_frame_id" value="utm_local" />
        <param name="z_offset" value="$(arg utm_z_offset)" />
        <param name="utm_zone" value="$(arg utm_zone)" if="$(eval utm_zone != '')" />
        <param name="path_max_size" value="50000" />
        <remap from="~fix" to="gps/filtered" />
    </node>

    <node name="gpx_visualize" pkg="gps_to_path" type="gpx_visualize">
        <param name="z_offset" value="$(arg utm_z_offset)" />
        <param name="utm_zone" value="$(arg utm_zone)" if="$(eval utm_zone != '')" />
        <param name="path_frame_id" value="utm_local" />
        <param name="gpx_file" value="$(arg gpx_file)" if="$(eval gpx_file != '')" />
        <remap from="~gpx_file" to="$(arg path_planner_node_name)/gpx_assignment" if="$(eval gpx_file == '')" />
        <remap from="~reverse" to="$(arg path_planner_node_name)/flip" />
    </node>
    
    <node name="visualize_azimuth" pkg="compass" type="visualize_azimuth">
        <remap from="~azimuth" to="compass/true/enu/rad" />
    </node>

    <node name="gps_odom_path" pkg="nav_utils" type="tf_to_path">
        <param name="parent_frame" value="gps_odom" />
        <param name="child_frame" value="base_link" />
        <param name="stamp_trigger_frame" value="gps_odom" />
        <remap from="path" to="gps_odom_path" />
    </node>

    <node name="osm_visualize" pkg="gps_to_path" type="osm_visualize" if="$(arg osm_vis)">
        <param name="gpx_assignment" value="$(arg gpx_file)" if="$(eval gpx_file != '')" />
        <remap from="~gpx_assignment" to="$(arg path_planner_node_name)/gpx_assignment" if="$(eval gpx_file == '')" />
        <param name="z_offset" value="$(arg utm_z_offset)" />
    </node>

    <node name="costmap_slow" pkg="topic_tools" type="throttle" args="bytes graph_pcd 2500000 10 graph_pcd_slow" respawn="true" />
    <node name="azimuth_slow" pkg="topic_tools" type="throttle" args="messages visualize_azimuth/azimuth_vis 2 visualize_azimuth/azimuth_vis_slow" respawn="true" />
    <node name="path_utm_slow" pkg="topic_tools" type="throttle" args="messages path_utm 2 path_utm_slow" respawn="true" />
    <node name="fix_utm_slow" pkg="topic_tools" type="throttle" args="messages fix_to_utm/path 1 fix_to_utm/path_slow" respawn="true" />
    <node name="fix_smoothed_utm_slow" pkg="topic_tools" type="throttle" args="messages fix_smoothed_to_utm/path 1 fix_smoothed_to_utm/path_slow" respawn="true" />

    <node name="processed_waypoints_path" pkg="gps_to_path" type="waypoints_to_path_simple" unless="$(arg replay)">
        <param name="target_frame" value="utm" />
        <param name="z_frame" value="base_link" />
        <remap from="waypoints" to="processed_waypoints" />
        <remap from="path" to="processed_waypoints_path" />
    </node>

    <node name="original_waypoints_path" pkg="gps_to_path" type="waypoints_to_path_simple" unless="$(arg replay)">
        <param name="target_frame" value="utm" />
        <param name="z_frame" value="base_link" />
        <remap from="waypoints" to="original_waypoints" />
        <remap from="path" to="original_waypoints_path" />
    </node>

    <!-- Support for remaining battery visualization. -->
    <node name="$(anon tradr_battery_viz)" pkg="topic_tools" type="relay_field"
          args="/battery_status tradr_battery_voltage std_msgs/Float32 &quot;{data: m.voltage - 40}&quot; --wait-for-start" respawn="true" />

    <node name="$(anon spot_payload_battery_viz)" pkg="topic_tools" type="relay_field"
          args="/sysvoltage spot_payload_voltage std_msgs/Float32 &quot;{data: m.data - 14}&quot; --wait-for-start" respawn="true" />

    <node name="$(anon spot_battery_viz)" pkg="topic_tools" type="transform"
          args="/spot/status/battery_states spot_battery_percentage std_msgs/Float32 &quot;m.battery_states[0].charge_percentage&quot; --wait-for-start" respawn="true" />

    <node name="$(anon husky_battery_viz)" pkg="topic_tools" type="relay_field"
          args="/status husky_battery_voltage std_msgs/Float32 &quot;{data: m.battery_voltage - 19}&quot; --wait-for-start" respawn="true" />

    <node name="$(anon robotsound_viz)" pkg="topic_tools" type="relay_field"
          args="/robotsound robotsound_viz std_msgs/String &quot;{data: m.arg}&quot; --wait-for-start" respawn="true" />

    <!-- Overview camera. On TRADR, viz/pano/compressed should be transmitted directly. -->
    
    <node name="overview_cam_manager" pkg="nodelet" type="nodelet" args="manager" respawn="true" />
    <node name="overview_cam_throttle" pkg="nodelet" type="nodelet" args="load camera_throttle/CameraThrottle overview_cam_manager">
        <remap from="camera_in" to="camera_front" />
        <remap from="camera_out" to="camera_front_slow" />
        <param name="sub_base_name" value="image_color" />
        <param name="rate" value="1" />
    </node>
    <node name="overview_cam_resize" pkg="nodelet" type="nodelet" args="load image_proc/resize overview_cam_manager">
        <remap from="image" to="camera_front_slow/image_color" />
        <remap from="camera_info" to="camera_front_slow/camera_info" />
        <remap from="~image" to="camera_front_small/image_color" />
        <remap from="~camera_info" to="camera_front_small/camera_info" />
        <param name="scale_height" value="0.25" />
        <param name="scale_width" value="0.25" />
    </node>
    
</launch>    
