#!/usr/bin/env python

import rospy

from sensor_msgs.msg import NavSatFix, NavSatStatus
from gps_to_path.msg import NavSatDetailedStatus

import random


class FakeGps():

    def __init__(self):
        self.publisher = rospy.Publisher("fix", NavSatFix, queue_size=10)
        self.publisher_status = rospy.Publisher("fix_status", NavSatDetailedStatus, queue_size=10)
        self.msg = NavSatFix()
        self.msg_status = NavSatDetailedStatus()
        self.c = 0
        self.set_msg()

    def set_msg(self):
        #self.msg.latitude = 50.0904047 #50.076673857412935
        #self.msg.longitude = 14.1332572 #14.41751975802257
        self.msg.latitude = 50.07656871 #50.076673857412935
        self.msg.longitude = 14.41787879
        #50.0934817N, 14.1322394E
        self.msg.altitude = 200.0

        self.c += 1

        self.msg.position_covariance = [0]*9
        self.msg.position_covariance[0] = 1
        self.msg.position_covariance[4] = 1
        self.msg.position_covariance[8] = 1

        self.msg.header.stamp = rospy.Time.now()
        self.msg.header.frame_id = "gps"
        self.msg.status.status = NavSatStatus.STATUS_FIX
        self.msg.status.service = NavSatStatus.SERVICE_GPS

        self.msg_status.header = self.msg.header
        self.msg_status.integer_ambiguity_ratio = 2.0
        self.msg_status.satellites_used = 20
        self.msg_status.last_corrections_time = rospy.Time.now()
        self.msg_status.gps_time.header = self.msg.header
        self.msg_status.gps_time.time_ref = rospy.Time.now()

    def update_message(self):
        self.msg.header.stamp = rospy.Time.now()
        self.msg_status.header.stamp = rospy.Time.now()
        self.msg_status.last_corrections_time = rospy.Time.now()
        self.msg_status.gps_time.time_ref = rospy.Time.now()
        #self.msg.latitude += 0.000001 * random.random()
        #self.msg.longitude += 0.000001 * random.random()

    def run(self):
        rate = rospy.Rate(5)
        while not rospy.is_shutdown():
            self.update_message()
            self.publisher.publish(self.msg)
            self.publisher_status.publish(self.msg_status)
            rate.sleep()


if __name__ == "__main__":
    rospy.init_node("fake_gps")
    node = FakeGps()
    node.run()
